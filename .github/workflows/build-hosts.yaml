name: Build Host

on:
  #push:
  #  branches: [ main ]
  pull_request:
  workflow_dispatch:
  
jobs:
  build-host:
    name: "Build Host"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      #max-parallel: 3
      matrix:
        host:
        - air13
        - tower
        - futro
        - oca
        - oc1
        - oc2
  #      - r2s1
    steps:
    - run: |
         DEBIAN_FRONTEND=noninteractive
         sudo apt-get update -q -y && sudo apt-get install -q -y qemu-system-aarch64 qemu-efi binfmt-support qemu-user-static
      if: contains(matrix.host, 'oca')
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 512
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
        # build-mount-path: '/home/runner/work'
    - name: Clone repository
      uses: actions/checkout@v3
    - name: Restore Nix store
      uses: actions/cache@v3
      id: nix-cache
      with:
        path: ./nix-cache
        key: nix-${{ matrix.host }}-${{ hashFiles('**/flake.*') }}
        restore-keys: |
          nix-${{ matrix.host }}-
          nix-
    - name: Install nix
      uses: DeterminateSystems/nix-installer-action@v1
      with:
        extra-conf: |
          experimental-features = nix-command flakes
          extra-platforms = aarch64-linux arm-linux i686-linux
    - name: Imports Nix store cache
      continue-on-error: true
      run: nix-store --import < ./nix-cache
    - uses: cachix/cachix-action@v12
      with:
        name: chr
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Build Host ${{ matrix.host }} 
      run: nix build .#nixosConfigurations.${{ matrix.host}}.config.system.build.toplevel --print-build-logs
    - name: Exports Nix store cache
      continue-on-error: true
      run: nix-store --export $(find /nix/store -maxdepth 1 -name '*-*') > ./nix-cache
